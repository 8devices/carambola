Index: linux-2.6.39.4/drivers/i2c/busses/Kconfig
===================================================================
--- linux-2.6.39.4.orig/drivers/i2c/busses/Kconfig
+++ linux-2.6.39.4/drivers/i2c/busses/Kconfig
@@ -871,4 +871,9 @@ config SCx200_ACB
 	  This support is also available as a module.  If so, the module
 	  will be called scx200_acb.
 
+config RAMIPS_I2C
+	tristate "Ramips i2c support"
+	help
+	  Ramips i2c
+
 endmenu
Index: linux-2.6.39.4/drivers/i2c/busses/Makefile
===================================================================
--- linux-2.6.39.4.orig/drivers/i2c/busses/Makefile
+++ linux-2.6.39.4/drivers/i2c/busses/Makefile
@@ -83,4 +83,6 @@ obj-$(CONFIG_I2C_STUB)		+= i2c-stub.o
 obj-$(CONFIG_SCx200_ACB)	+= scx200_acb.o
 obj-$(CONFIG_SCx200_I2C)	+= scx200_i2c.o
 
+obj-$(CONFIG_RAMIPS_I2C)	+= i2c-ramips.o
+
 ccflags-$(CONFIG_I2C_DEBUG_BUS) := -DDEBUG
Index: linux-2.6.39.4/drivers/i2c/busses/i2c-ramips.c
===================================================================
--- /dev/null
+++ linux-2.6.39.4/drivers/i2c/busses/i2c-ramips.c
@@ -0,0 +1,74 @@
+#include <linux/module.h>
+#include <linux/delay.h>
+#include <linux/kernel.h>
+#include <linux/platform_device.h>
+#include <linux/stddef.h>
+//#include <linux/ioport.h>
+#include <linux/i2c.h>
+#include <linux/init.h>
+//#include <linux/acpi.h>
+//#include <linux/io.h>
+
+static int ramips_i2c_access(struct i2c_adapter *adap, u16 addr,
+			     unsigned short flags, char read_write, u8 command,
+			     int size, union i2c_smbus_data *data)
+{
+	return -EOPNOTSUPP;
+}
+
+static u32 ramips_i2c_func(struct i2c_adapter *adapter)
+{
+	u32 func = I2C_FUNC_SMBUS_QUICK | I2C_FUNC_SMBUS_BYTE |
+		I2C_FUNC_SMBUS_BYTE_DATA | I2C_FUNC_SMBUS_WORD_DATA |
+		I2C_SMBUS_PROC_CALL | I2C_FUNC_SMBUS_BLOCK_DATA;
+
+	return func;
+}
+
+static const struct i2c_algorithm ramips_i2c_algorithm = {
+	.smbus_xfer	= ramips_i2c_access,
+	.functionality	= ramips_i2c_func,
+};
+
+static struct i2c_adapter ramips_i2c_adapter = {
+	.owner		= THIS_MODULE,
+	.class		= I2C_CLASS_HWMON | I2C_CLASS_SPD,
+	.algo		= &ramips_i2c_algorithm,
+};
+
+static int ramips_i2c_probe(struct platform_device *pdev)
+{
+/*	retval = i2c_add_adapter(&ramips_i2c_adapter); */
+
+	return -EOPNOTSUPP;
+}
+static int ramips_i2c_remove(struct platform_device *pdev)
+{
+	return 0;
+}
+
+static struct platform_driver ramips_i2c_driver = {
+	.probe          = ramips_i2c_probe,
+	.remove         = ramips_i2c_remove,
+	.driver         = {
+		.owner  = THIS_MODULE,
+		.name   = "ramips-i2c",
+	},
+};
+
+static int __init i2c_ramips_init(void)
+{
+        return platform_driver_register(&ramips_i2c_driver);
+}
+
+static void __exit i2c_ramips_exit(void)
+{
+        platform_driver_unregister(&ramips_i2c_driver);
+}
+
+MODULE_AUTHOR("123 <123@wilibox.com>");
+MODULE_DESCRIPTION("ramips SMBus driver");
+MODULE_LICENSE("GPL");
+
+module_init(i2c_ramips_init);
+module_exit(i2c_ramips_exit);
