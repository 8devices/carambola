From 101f908ed3b66e3c3b0cac5750eaae21ef0d6964 Mon Sep 17 00:00:00 2001
From: Modestas Stankus <stankus.modestas@gmail.com>
Date: Tue, 24 Apr 2012 09:37:33 +0300
Subject: [PATCH] Citramona support

---
 arch/mips/include/asm/mach-ralink/machine.h     |    2 ++
 arch/mips/include/asm/mach-ralink/rt3883_regs.h |    1 +
 arch/mips/ralink/rt3883/Kconfig                 |    5 +++
 arch/mips/ralink/rt3883/Makefile                |    1 +
 arch/mips/ralink/rt3883/devices.c               |   38 ++++++++++++++++++++++-
 arch/mips/ralink/rt3883/devices.h               |    4 +++
 6 files changed, 50 insertions(+), 1 deletion(-)

Index: linux-3.2.13/arch/mips/include/asm/mach-ralink/machine.h
===================================================================
--- linux-3.2.13.orig/arch/mips/include/asm/mach-ralink/machine.h
+++ linux-3.2.13/arch/mips/include/asm/mach-ralink/machine.h
@@ -57,4 +57,6 @@ enum ramips_mach_type {
 
 	/* RT3662 based machines */
 	RAMIPS_MACH_RT_N56U,		/* Asus RT-N56U */
+	RAMIPS_MACH_CITRAMONA,          /* "Citramona" */
+
 };
Index: linux-3.2.13/arch/mips/include/asm/mach-ralink/rt3883_regs.h
===================================================================
--- linux-3.2.13.orig/arch/mips/include/asm/mach-ralink/rt3883_regs.h
+++ linux-3.2.13/arch/mips/include/asm/mach-ralink/rt3883_regs.h
@@ -66,6 +66,7 @@
 #define RT3883_WLAN_SIZE	0x40000
 #define RT3883_USBHOST_SIZE	0x40000
 #define RT3883_BOOT_SIZE	(32 * 1024 * 1024)
+#define RT3883_CITRA_BOOT_SIZE	(8 * 1024 * 1024)
 #define RT3883_SRAM_SIZE	(32 * 1024 * 1024)
 
 /* SYSC registers */
Index: linux-3.2.13/arch/mips/ralink/rt3883/Kconfig
===================================================================
--- linux-3.2.13.orig/arch/mips/ralink/rt3883/Kconfig
+++ linux-3.2.13/arch/mips/ralink/rt3883/Kconfig
@@ -8,6 +8,11 @@ config RT3883_MACH_RT_N56U
 	select RALINK_DEV_GPIO_BUTTONS
 	select RALINK_DEV_GPIO_LEDS
 
+config RT3883_MACH_CITRAMONA
+	bool "CITRAMONA support"
+	default y
+
+
 endmenu
 
 endif
Index: linux-3.2.13/arch/mips/ralink/rt3883/Makefile
===================================================================
--- linux-3.2.13.orig/arch/mips/ralink/rt3883/Makefile
+++ linux-3.2.13/arch/mips/ralink/rt3883/Makefile
@@ -12,3 +12,4 @@ obj-y	:= irq.o setup.o devices.o rt3883.
 obj-$(CONFIG_EARLY_PRINTK)		+= early_printk.o
 
 obj-$(CONFIG_RT3883_MACH_RT_N56U)	+= mach-rt-n56u.o
+obj-$(CONFIG_RT3883_MACH_CITRAMONA)     += mach-citramona.o
Index: linux-3.2.13/arch/mips/ralink/rt3883/devices.c
===================================================================
--- linux-3.2.13.orig/arch/mips/ralink/rt3883/devices.c
+++ linux-3.2.13/arch/mips/ralink/rt3883/devices.c
@@ -18,6 +18,7 @@
 #include <linux/err.h>
 #include <linux/clk.h>
 #include <linux/rt2x00_platform.h>
+#include <linux/etherdevice.h>
 
 #include <asm/addrspace.h>
 
@@ -66,8 +67,30 @@ static struct platform_device rt3883_fla
 	},
 };
 
+static struct resource rt3883_flash2_resources[] = {
+	{
+		.flags	= IORESOURCE_MEM,
+		.start	= RT3883_BOOT_BASE,
+		.end	= RT3883_BOOT_BASE + RT3883_CITRA_BOOT_SIZE - 1,
+	},
+};
+
+struct physmap_flash_data rt3883_flash2_data;
+static struct platform_device rt3883_flash2_device = {
+	.name		= "physmap-flash",
+	.resource	= rt3883_flash2_resources,
+	.num_resources	= ARRAY_SIZE(rt3883_flash2_resources),
+	.dev = {
+		.platform_data = &rt3883_flash2_data,
+	},
+};
+
+
 static int rt3883_flash_instance __initdata;
-void __init rt3883_register_pflash(unsigned int id)
+void __init __rt3883_register_flash(unsigned int id,
+				    struct mtd_partition *parts,
+				    unsigned int nr_parts)
+
 {
 	struct platform_device *pdev;
 	struct physmap_flash_data *pdata;
@@ -84,6 +107,11 @@ void __init rt3883_register_pflash(unsig
 		pdev = &rt3883_flash1_device;
 		reg = RT3883_FSCC_REG_FLASH_CFG1;
 		break;
+	case 2:
+		pdev = &rt3883_flash2_device;
+		reg = RT3883_FSCC_REG_FLASH_CFG0;
+		break;
+
 	default:
 		return;
 	}
@@ -115,6 +143,10 @@ void __init rt3883_register_pflash(unsig
 		pr_warn("RT3883: flash bank%d: invalid width detected\n", id);
 		return;
 	}
+	if (parts != NULL) {
+		pdata->parts = parts;
+		pdata->nr_parts = nr_parts;
+	}
 
 	pdev->id = rt3883_flash_instance;
 
@@ -122,6 +154,11 @@ void __init rt3883_register_pflash(unsig
 	rt3883_flash_instance++;
 }
 
+void __init rt3883_register_pflash(unsigned int id)
+{
+	__rt3883_register_flash(id, NULL, 0);
+}
+
 static atomic_t rt3883_usb_use_count = ATOMIC_INIT(0);
 
 static void rt3883_usb_host_start(void)
@@ -285,6 +322,22 @@ static struct platform_device rt3883_eth
 	}
 };
 
+
+#define EEPROM_FLASH_BASE  0x1c040000
+#define EEPROM_FLASH_SIZE 0x200
+
+void __init rt3883_read_ethernet_mac(unsigned char *addr)
+{
+	void __iomem *base_addr;
+
+	base_addr = ioremap(EEPROM_FLASH_BASE, EEPROM_FLASH_SIZE);
+	if (base_addr == NULL)
+		return;
+
+	memcpy(addr, base_addr + 0x28, 6);
+	iounmap(base_addr);
+}
+
 void __init rt3883_register_ethernet(void)
 {
 	struct clk *clk;
@@ -295,6 +348,10 @@ void __init rt3883_register_ethernet(voi
 
 	rt3883_eth_data.sys_freq = clk_get_rate(clk);
 
+	rt3883_read_ethernet_mac(rt3883_eth_data.mac);
+	if (!is_valid_ether_addr(rt3883_eth_data.mac)) 
+		random_ether_addr(rt3883_eth_data.mac);
+
 	platform_device_register(&rt3883_eth_device);
 }
 
Index: linux-3.2.13/arch/mips/ralink/rt3883/devices.h
===================================================================
--- linux-3.2.13.orig/arch/mips/ralink/rt3883/devices.h
+++ linux-3.2.13/arch/mips/ralink/rt3883/devices.h
@@ -16,6 +16,10 @@ struct physmap_flash_data;
 extern struct physmap_flash_data rt3883_flash0_data;
 extern struct physmap_flash_data rt3883_flash1_data;
 void rt3883_register_pflash(unsigned int id);
+void __rt3883_register_flash(unsigned int id,
+				    struct mtd_partition *parts,
+				    unsigned int nr_parts);
+
 
 extern struct ramips_nand_platform_data rt3883_nand_data;
 void rt3883_register_nand(void);
Index: linux-3.2.13/arch/mips/ralink/rt3883/mach-citramona.c
===================================================================
--- /dev/null
+++ linux-3.2.13/arch/mips/ralink/rt3883/mach-citramona.c
@@ -0,0 +1,129 @@
+/*
+ *  CITRAMONA board support
+ *
+ *  Copyright (C) 2012 Zilvinas Valinskas <zilvinas@8devices.com>
+ *  Copyright (C) 2012 Evaldas Palaima    <evaldas@8devices.com>
+ *  Copyright (C) 2012 Modestas Stankus   <modestas@8devices.com>
+ *
+ *  This program is free software; you can redistribute it and/or modify it
+ *  under the terms of the GNU General Public License version 2 as published
+ *  by the Free Software Foundation.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/partitions.h>
+#include <linux/mtd/physmap.h>
+
+#include <asm/mach-ralink/machine.h>
+#include <asm/sizes.h>
+#include <linux/i2c.h>
+#include <linux/i2c-gpio.h>
+
+#include <linux/ethtool.h>
+
+#include <asm/mach-ralink/dev-gpio-buttons.h>
+#include <asm/mach-ralink/dev-gpio-leds.h>
+#include <asm/mach-ralink/rt3883.h>
+#include <asm/mach-ralink/rt3883_regs.h>
+#include <asm/mach-ralink/ramips_eth_platform.h>
+
+#include "devices.h"
+
+#define CITRAMONA_UBOOT_SIZE	0x030000 /*  192KB */
+#define CITRAMONA_UBOOT_ENV	0x010000 /*   64KB */
+#define CITRAMONA_FACTORY_SIZE	0x010000 /*   64KB */
+#define CITRAMONA_KERNEL_SIZE	0x120000 /* 1152KB */
+#define CITRAMONA_ROOTFS_SIZE	0x690000 /* 6720KB */
+
+static struct mtd_partition citramona_partitions[] = {
+	{
+		.name   = "u-boot",
+		.offset = 0,
+		.size   = CITRAMONA_UBOOT_SIZE,
+		.mask_flags = MTD_WRITEABLE,	/* precaution */
+	}, {
+		.name   = "u-boot-env",
+		.offset = MTDPART_OFS_APPEND,
+		.size   = CITRAMONA_UBOOT_ENV,
+	}, {
+		.name   = "factory",
+		.offset = MTDPART_OFS_APPEND,
+		.size   = CITRAMONA_FACTORY_SIZE,
+	}, {
+		.name   = "kernel",
+		.offset = MTDPART_OFS_APPEND,
+		.size   = CITRAMONA_KERNEL_SIZE,
+	}, {
+		.name   = "rootfs",
+		.offset = MTDPART_OFS_APPEND,
+		.size	= CITRAMONA_ROOTFS_SIZE,
+	}, {
+		.name   = "firmware", /* skip u-boot, uboot-env and factory partitions */
+		.offset = CITRAMONA_UBOOT_SIZE + CITRAMONA_UBOOT_ENV + CITRAMONA_FACTORY_SIZE,
+		.size   = CITRAMONA_KERNEL_SIZE + CITRAMONA_ROOTFS_SIZE,
+	}
+};
+
+static int __init citramona_register_gpiodev(void)
+{
+       static struct resource res = {
+               .start = 0xFFFFFFFF,
+       };
+       struct platform_device *pdev;
+
+       pdev = platform_device_register_simple("GPIODEV", 0, &res, 1);
+       if (!pdev) {
+               printk(KERN_ERR "citramona: GPIODEV init failed\n");
+               return -ENODEV;
+       }
+
+       return 0;
+}
+
+static struct i2c_gpio_platform_data citramona_i2c_gpio_data = {
+	.sda_pin        = 1,
+	.scl_pin        = 2,
+};
+
+static struct platform_device citramona_i2c_gpio = {
+	.name           = "i2c-gpio",
+	.id             = 0,
+	.dev     = {
+		.platform_data  = &citramona_i2c_gpio_data,
+	},
+};
+
+static struct platform_device *citramona_devices[] __initdata = {
+        &citramona_i2c_gpio
+};
+
+static void __init citramona_init(void)
+{
+	/*
+	rt3883_gpio_init(RT3883_GPIO_MODE_UART0(RT3883_GPIO_MODE_GPIO) |
+			 RT3883_GPIO_MODE_PCI(RT3883_GPIO_MODE_PCI_FNC));
+	*/
+
+
+	citramona_register_gpiodev();
+
+	/* we want fixed partitions sizes for now */
+	__rt3883_register_flash(2,
+				citramona_partitions,
+				ARRAY_SIZE(citramona_partitions));
+
+	rt3883_eth_data.speed = SPEED_100;
+	rt3883_eth_data.duplex = DUPLEX_FULL;
+	rt3883_eth_data.tx_fc = 1;
+	rt3883_eth_data.rx_fc = 1;
+	rt3883_register_ethernet();
+
+	rt3883_register_wdt(false);
+	rt3883_register_usbhost();
+	platform_add_devices(citramona_devices, ARRAY_SIZE(citramona_devices));
+
+}
+
+MIPS_MACHINE(RAMIPS_MACH_CITRAMONA, "CITRAMONA", "CITRAMONA", citramona_init);
